openapi: 3.1.0
info:
  title: DP-1 Feed Operator API
  version: 0.9.0-alpha
  description: |
    REST interface for creating, updating, and retrieving DP-1 playlists and
    playlist-groups (exhibitions) with **API key authentication**.
    
    * **Writes** (`POST`, `PUT`) MUST include an `Authorization: Bearer <api-key>` header.  
    * The server validates the API key, timestamps `created`, and persists the resource.
    * API keys are rotated server-side for enhanced security.
    * **List endpoints** support pagination with `page` and `limit` query parameters.
    * **Playlists** can be filtered by playlist-group using the `playlist-group` query parameter.
    * **Resources** can be queried by both UUID and URL-friendly slug identifiers.

servers:
  - url: https://api.feed.feralfile.com

tags:
  - name: Playlists
    description: CRUD for DP-1 playlists
  - name: Playlist-Groups
    description: CRUD for curator-authored collections (exhibitions)
  - name: Playlist-Items
    description: Read operations for individual playlist items

##########################################################################
# 1 · SECURITY SCHEME — simplified API key authentication
##########################################################################
components:
  securitySchemes:
    ApiKeyAuth:
      type: http
      scheme: bearer
      bearerFormat: API Key
      description: |
        Bearer token authentication using API keys.
        Example: `Authorization: Bearer dp1_api_key_123456789abcdef`

##########################################################################
# 2 · SCHEMAS
##########################################################################
  schemas:

    ####################################################################
    # 2.1 DisplayPrefs — ALL OPTIONAL, aligned with spec section 4
    ####################################################################
    DisplayPrefs:
      type: object
      properties:
        scaling:
          type: string
          enum: [fit, fill, stretch, auto]
          description: |
            - fit: entire artwork visible with letterbox
            - fill: fill viewport cropping if needed  
            - stretch: fill both axes ignoring aspect
            - auto: player decides based on device/profile
        margin:
          oneOf:
            - type: number
              minimum: 0
              description: Pixels (CSS-px, device-independent)
            - type: string
              pattern: '^[0-9]+(\.[0-9]+)?(px|%|vw|vh)$'
              description: CSS units (%, vw, vh)
        background:
          type: string
          description: Hex color (#000000) or "transparent"
          pattern: '^(#([0-9a-fA-F]{6}|[0-9a-fA-F]{3})|transparent)$'
        autoplay:
          type: boolean
          description: Attempt to start playback automatically
        loop:
          type: boolean
          description: Repeat automatically
        interaction:
          type: object
          properties:
            keyboard:
              type: array
              items:
                type: string
                description: W3C UI Events code values (e.g., "ArrowLeft", "Space", "KeyW")
              description: Allowed keyboard shortcuts
            mouse:
              type: object
              properties:
                click: { type: boolean }
                scroll: { type: boolean }
                drag: { type: boolean }
                hover: { type: boolean }
              additionalProperties: false
          additionalProperties: false
      additionalProperties: false

    ####################################################################
    # 2.2 Repro — engineVersion, assetsSHA256, frameHash REQUIRED
    ####################################################################
    Repro:
      type: object
      required: [engineVersion, assetsSHA256, frameHash]
      properties:
        engineVersion:
          type: object
          description: Browser/renderer engine versions
          example: { "chromium": "123.0.6312.58" }
        seed:
          type: string
          description: Deterministic PRNG seed (OPTIONAL)
          pattern: '^0x[a-fA-F0-9]+$'
          maxLength: 130
        assetsSHA256:
          type: array
          maxItems: 1024
          items: 
            type: string
            pattern: '^[a-fA-F0-9]+$'
            maxLength: 64
          description: SHA-256 hashes of every external asset
        frameHash:
          type: object
          description: SHA-256 and/or perceptual hash of first frame
          required: [sha256]
          properties:
            sha256:
              type: string
              pattern: '^[a-fA-F0-9]+$'
              maxLength: 64
            phash:
              type: string
              pattern: '^0x[a-fA-F0-9]+$'
              maxLength: 32
          example: { "sha256": "bf20f9…", "phash": "0xaf39…" }
          additionalProperties: false
      additionalProperties: false

    ####################################################################
    # 2.3 Provenance — only type REQUIRED
    ####################################################################
    Provenance:
      type: object
      required: [type]
      properties:
        type:
          type: string
          enum: [onChain, seriesRegistry, offChainURI]
          description: Type of provenance
        contract:
          type: object
          description: Present when type is "onChain" or "seriesRegistry" (OPTIONAL)"
          required: [chain]
          properties:
            chain:
              type: string
              enum: [evm, tezos, bitmark, other]
            standard:
              type: string
              enum: [erc721, erc1155, fa2, other]
              description: Contract standard (OPTIONAL)
            address:
              type: string
              description: Contract address (OPTIONAL)
              maxLength: 48
            seriesId:
              oneOf:
                - type: integer
                  minimum: 0
                  maximum: 4294967295
                - type: string
                  maxLength: 128
              description: Series ID (OPTIONAL)
            tokenId:
              type: string
              description: Token ID for specific edition (OPTIONAL)
              maxLength: 128
            uri:
              type: string
              description: IPFS, ETH, or HTTPS URI (OPTIONAL)"
              pattern: '^[a-zA-Z][a-zA-Z0-9+.-]*:[^\s]*$'
              maxLength: 1024
            metaHash:
              type: string
              description: SHA-256 hash (REQUIRED if uri is mutable, otherwise OPTIONAL)
              pattern: '^[a-fA-F0-9]+$'
              maxLength: 64
          additionalProperties: false
        dependencies:
          type: array
          maxItems: 1024
          description: Documentary dependencies - OPTIONAL array
          items:
            type: object
            required: [chain, uri]
            properties:
              chain:
                type: string
                enum: [evm, tezos, bitmark, other]
              standard:
                type: string
                enum: [erc721, erc1155, fa2, other]
                description: Contract standard (OPTIONAL)
              uri:
                type: string
                pattern: '^[a-zA-Z][a-zA-Z0-9+.-]*:[^\s]*$'
                maxLength: 1024
            additionalProperties: false
      additionalProperties: false

    ####################################################################
    # 2.4 PlaylistItem — source, duration, license REQUIRED
    ####################################################################
    PlaylistItem:
      type: object
      required: [source, duration, license]
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
          description: Server-generated UUID
          example: "385f79b6-a45f-4c1c-8080-e93a192adccc"
        title:
          type: string
          description: Display title (OPTIONAL)
          maxLength: 256
          example: "Payphone"
        source:
          type: string
          description: URL to the artwork
          pattern: '^[a-zA-Z][a-zA-Z0-9+.-]*:[^\s]*$'
          example: "https://cdn.feralfile.com/payphone/index.html"
          maxLength: 1024
        duration:
          type: number
          minimum: 1
          description: Duration in seconds
          example: 300
        license:
          type: string
          enum: [open, token, subscription]
          maxLength: 16          
        ref:
          type: string
          description: External manifest URL for metadata (OPTIONAL)
          pattern: '^[a-zA-Z][a-zA-Z0-9+.-]*:[^\s]*$'
          example: "ipfs://bafybeigd…/manifest.json"
          maxLength: 1024
        override:
          type: object
          description: Override values that viewer may apply to display settings
          properties:
            scaling:
              type: string
              enum: [fit, fill, stretch, auto]
              description: Alternative scaling mode viewer can apply
            margin:
              oneOf:
                - type: number
                  minimum: 0
                  description: Pixels (CSS-px, device-independent)
                - type: string
                  pattern: '^[0-9]+(\.[0-9]+)?(px|%|vw|vh)$'
                  description: CSS units (%, vw, vh)
            background:
              type: string
              description: Alternative background color (#000000) or "transparent"
              pattern: '^(#([0-9a-fA-F]{6}|[0-9a-fA-F]{3})|transparent)$'
            autoplay:
              type: boolean
              description: Alternative autoplay setting
            loop:
              type: boolean
              description: Alternative loop setting
          additionalProperties: true
        display:
          $ref: '#/components/schemas/DisplayPrefs'
          description: Display preferences (OPTIONAL)
        repro:
          $ref: '#/components/schemas/Repro'
          description: Reproduction metadata (OPTIONAL)
        provenance:
          $ref: '#/components/schemas/Provenance'
          description: Blockchain provenance (OPTIONAL)
      additionalProperties: false

    ####################################################################
    # 2.5 Playlist — dpVersion, items, title REQUIRED
    ####################################################################
    Playlist:
      type: object
      required: [dpVersion, items, title]
      properties:
        dpVersion:
          type: string
          description: Server-determined DP-1 protocol version
          pattern: '^[0-9]+\.[0-9]+\.[0-9]+$'
          example: "0.9.0"
          maxLength: 16
        id:
          type: string
          format: uuid
          readOnly: true
          description: Server-generated UUID
          example: "385f79b6-a45f-4c1c-8080-e93a192adccc"
        slug:
          type: string
          pattern: '^[a-zA-Z0-9-]+$'
          maxLength: 64
          description: URL-friendly identifier (generated from title by server)
          readOnly: true
          example: "summer-mix-01-1234"
        title:
          type: string
          description: Display title (OPTIONAL)
          maxLength: 256
          example: "Summer Mix 01"
        created:
          type: string
          format: date-time
          readOnly: true
          description: Server-generated ISO 8601 timestamp
          example: "2025-06-03T17:01:00Z"
        defaults:
          type: object
          description: Default values inherited by playlist items (OPTIONAL)"
          properties:
            display:
              $ref: '#/components/schemas/DisplayPrefs'
            license:
              type: string
              enum: [open, token, subscription]
            duration:
              type: number
              minimum: 1
          example: {
            "display": {
              "scaling": "fit",
              "background": "#000000", 
              "margin": "5%"
            },
            "license": "open",
            "duration": 300
          }
        items:
          type: array
          minItems: 1
          maxItems: 1024
          items:
            $ref: '#/components/schemas/PlaylistItem'
        signature:
          type: string
          description: Ed25519 signature for playlist verification (OPTIONAL)"
          pattern: '^ed25519:0x[a-fA-F0-9]+$'
          maxLength: 150
          example: "ed25519:0x…"
          readOnly: true
      additionalProperties: false

    ####################################################################
    # 2.5.1 PlaylistCreate — for POST operations
    ####################################################################
    PlaylistCreate:
      type: object
      required: [dpVersion, items]
      properties:
        dpVersion:
          type: string
          description: DP-1 protocol version
          pattern: '^[0-9]+\.[0-9]+\.[0-9]+$'
          example: "0.9.0"
          maxLength: 16
        defaults:
          type: object
          description: Default values inherited by playlist items (OPTIONAL)"
          properties:
            display:
              $ref: '#/components/schemas/DisplayPrefs'
            license:
              type: string
              enum: [open, token, subscription]
            duration:
              type: number
              minimum: 1
          example: {
            "display": {
              "scaling": "fit",
              "background": "#000000", 
              "margin": "5%"
            },
            "license": "open",
            "duration": 300
          }
        items:
          type: array
          minItems: 1
          maxItems: 1024
          items:
            $ref: '#/components/schemas/PlaylistItem'
      additionalProperties: false

    ####################################################################
    # 2.5.2 PlaylistUpdate — for PUT operations (excludes protected fields)
    ####################################################################
    PlaylistUpdate:
      type: object
      properties:
        defaults:
          type: object
          description: Default values inherited by playlist items (OPTIONAL)"
          properties:
            display:
              $ref: '#/components/schemas/DisplayPrefs'
            license:
              type: string
              enum: [open, token, subscription]
            duration:
              type: number
              minimum: 1
          example: {
            "display": {
              "scaling": "fit",
              "background": "#000000", 
              "margin": "5%"
            },
            "license": "open",
            "duration": 300
          }
        items:
          type: array
          minItems: 1
          maxItems: 1024
          items:
            $ref: '#/components/schemas/PlaylistItem'
        title:
          type: string
          maxLength: 256
          example: "Summer Mix 01"
      additionalProperties: false

    ####################################################################
    # 2.6 PlaylistGroup — title, curator, playlists REQUIRED
    ####################################################################
    PlaylistGroup:
      type: object
      required: [title, curator, playlists]
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
          description: Server-generated UUID
          example: "385f79b6-a45f-4c1c-8080-e93a192adccc"
        slug:
          type: string
          pattern: '^[a-zA-Z0-9-]+$'
          maxLength: 64
          description: URL-friendly identifier (generated from title by server)
          readOnly: true
          example: "generative-geometry-2025-1234"
        title:
          type: string
          maxLength: 256
          example: "Generative Geometry"
        curator:
          type: string
          maxLength: 128
          example: "Alice Example"
        summary:
          type: string
          description: Description of the playlist group (OPTIONAL)
          maxLength: 4096
          example: "Exploring procedural form…"
        playlists:
          type: array
          minItems: 1
          maxItems: 1024
          items:
            type: string
            maxLength: 1024
            description: Full URL to playlist
            pattern: '^https://[^\s]+$'
          example: [
            "https://feed.feralfile.com/geom-p1/playlist",
            "https://feed.feralfile.com/geom-p2/playlist"
          ]
        created:
          type: string
          format: date-time
          readOnly: true
          description: Server-generated ISO 8601 timestamp
          example: "2025-05-20T00:00:00Z"
        coverImage:
          type: string
          description: IPFS or HTTPS URL to cover image (OPTIONAL)
          pattern: '^[a-zA-Z][a-zA-Z0-9+.-]*:[^\s]*$'
          example: "ipfs://bafyb…/cover.jpg"
          maxLength: 1024
      additionalProperties: false

    ####################################################################
    # 2.6.1 PlaylistGroupCreate — for POST operations
    ####################################################################
    PlaylistGroupCreate:
      type: object
      required: [title, curator, playlists]
      properties:
        title:
          type: string
          maxLength: 256
          example: "Generative Geometry"
        curator:
          type: string
          maxLength: 128
          example: "Alice Example"
        summary:
          type: string
          description: Description of the playlist group (OPTIONAL)
          maxLength: 4096
          example: "Exploring procedural form…"
        playlists:
          type: array
          minItems: 1
          maxItems: 1024
          items:
            type: string
            maxLength: 1024
            description: Full URL to playlist
            pattern: '^https://[^\s]+$'
          example: [
            "https://feed.feralfile.com/geom-p1/playlist",
            "https://feed.feralfile.com/geom-p2/playlist"
          ]
        coverImage:
          type: string
          description: IPFS or HTTPS URL to cover image (OPTIONAL)
          pattern: '^[a-zA-Z][a-zA-Z0-9+.-]*:[^\s]*$'
          example: "ipfs://bafyb…/cover.jpg"
          maxLength: 1024
      additionalProperties: false

    ####################################################################
    # 2.6.2 PlaylistGroupUpdate — for PUT operations (excludes protected fields)
    ####################################################################
    PlaylistGroupUpdate:
      type: object
      properties:
        title:
          type: string
          maxLength: 256
          example: "Generative Geometry"
        curator:
          type: string
          maxLength: 128
          example: "Alice Example"
        summary:
          type: string
          description: Description of the playlist group (OPTIONAL)
          maxLength: 4096
          example: "Exploring procedural form…"
        playlists:
          type: array
          minItems: 1
          maxItems: 1024
          items:
            type: string
            maxLength: 1024
            description: Full URL to playlist
            pattern: '^https://[^\s]+$'
          example: [
            "https://feed.feralfile.com/geom-p1/playlist",
            "https://feed.feralfile.com/geom-p2/playlist"
          ]
        coverImage:
          type: string
          description: IPFS or HTTPS URL to cover image (OPTIONAL)
          pattern: '^[a-zA-Z][a-zA-Z0-9+.-]*:[^\s]*$'
          example: "ipfs://bafyb…/cover.jpg"
          maxLength: 1024
      additionalProperties: false

    ####################################################################
    # 2.7 Pagination schemas
    ####################################################################
    PaginationMeta:
      type: object
      required: [cursor, limit, hasMore]
      properties:
        cursor:
          type: string
          pattern: '^[a-zA-Z0-9]+$'
          maxLength: 1024
          description: Pagination cursor from previous response
          example: "1234567890"
        limit:
          type: integer
          minimum: 1
          maximum: 100
          description: Number of items per page
          example: 20
        hasMore:
          type: boolean
          description: Whether there are more items to fetch
          example: true
      additionalProperties: false

    PlaylistsResponse:
      type: object
      required: [data, meta]
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/Playlist'
        meta:
          $ref: '#/components/schemas/PaginationMeta'
      additionalProperties: false

    PlaylistGroupsResponse:
      type: object
      required: [data, meta]
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/PlaylistGroup'
        meta:
          $ref: '#/components/schemas/PaginationMeta'
      additionalProperties: false

    PlaylistItemsResponse:
      type: object
      required: [data, meta]
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/PlaylistItem'
        meta:
          $ref: '#/components/schemas/PaginationMeta'
      additionalProperties: false

    ####################################################################
    # 2.8 Error response
    ####################################################################
    ErrorResponse:
      type: object
      required: [error, message]
      properties:
        error:
          type: string
          description: Error code
          maxLength: 32
        message:
          type: string
          description: Human-readable error message
          maxLength: 2048
      additionalProperties: false

##########################################################################
# 3 · GLOBAL RESPONSES
##########################################################################
  responses:
    Unauthorized:
      description: Invalid or missing API key
      content:
        application/json:
          schema: { $ref: '#/components/schemas/ErrorResponse' }

##########################################################################
# 4 · PATHS
##########################################################################
paths:

  #-------------------------#
  # 4.1  PLAYLIST ENDPOINTS #
  #-------------------------#
  /api/v1/playlists:
    get:
      tags: [Playlists]
      summary: List playlists with optional filtering and pagination
      parameters:
        - name: cursor
          in: query
          description: Pagination cursor from previous response
          schema:
            type: string
            pattern: '^[a-zA-Z0-9]+$'
            maxLength: 1024
          example: "1234567890"
        - name: limit
          in: query
          description: Number of items per page
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 100
          example: 100
        - name: playlist-group
          in: query
          description: Filter playlists by playlist group ID
          schema:
            oneOf:
              - type: string
                format: uuid
          example: "385f79b6-a45f-4c1c-8080-e93a192adccc"
      responses:
        '200':
          description: Playlists retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlaylistsResponse'
        '400':
          description: Invalid query parameters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

    post:
      tags: [Playlists]
      summary: Create a new playlist
      security: [{ ApiKeyAuth: [] }]
      requestBody:
        required: true
        content:
          application/json:
            schema: { $ref: '#/components/schemas/PlaylistCreate' }
      responses:
        '201':
          description: Playlist created successfully
          content:
            application/json:
              schema: { $ref: '#/components/schemas/Playlist' }
        '401':
          $ref: '#/components/responses/Unauthorized'
        '400':
          description: Invalid playlist data
          content:
            application/json:
              schema: { $ref: '#/components/schemas/ErrorResponse' }
        '429':
          description: Rate limit exceeded
          content:
            application/json:
              schema: { $ref: '#/components/schemas/ErrorResponse' }

  /api/v1/playlists/{playlistId}:
    parameters:
      - name: playlistId
        in: path
        required: true
        description: UUID or slug for the playlist
        schema:
          oneOf:
            - type: string
              format: uuid
            - type: string
              pattern: '^[a-zA-Z0-9-]+$'
              maxLength: 64

    get:
      tags: [Playlists]
      summary: Retrieve a playlist by ID
      responses:
        '200':
          description: Playlist retrieved successfully
          content:
            application/json:
              schema: { $ref: '#/components/schemas/Playlist' }
        '404':
          description: Playlist not found
          content:
            application/json:
              schema: { $ref: '#/components/schemas/ErrorResponse' }

    put:
      tags: [Playlists]
      summary: Update an existing playlist
      security: [{ ApiKeyAuth: [] }]
      requestBody:
        required: true
        content:
          application/json:
            schema: { $ref: '#/components/schemas/PlaylistUpdate' }
      responses:
        '200':
          description: Playlist updated successfully
          content:
            application/json:
              schema: { $ref: '#/components/schemas/Playlist' }
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          description: Playlist not found
          content:
            application/json:
              schema: { $ref: '#/components/schemas/ErrorResponse' }
        '400':
          description: Invalid playlist data
          content:
            application/json:
              schema: { $ref: '#/components/schemas/ErrorResponse' }

  #------------------------------#
  # 4.2  PLAYLIST-GROUP ENDPOINTS #
  #------------------------------#
  /api/v1/playlist-groups:
    get:
      tags: [Playlist-Groups]
      summary: List playlist groups with pagination
      parameters:
        - name: cursor
          in: query
          description: Pagination cursor from previous response
          schema:
            type: string
            pattern: '^[a-zA-Z0-9]+$'
            maxLength: 1024
          example: "1234567890"
        - name: limit
          in: query
          description: Number of items per page
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 100
          example: 100
      responses:
        '200':
          description: Playlist groups retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlaylistGroupsResponse'
        '400':
          description: Invalid query parameters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

    post:
      tags: [Playlist-Groups]
      summary: Create a new playlist group (exhibition)
      security: [{ ApiKeyAuth: [] }]
      requestBody:
        required: true
        content:
          application/json:
            schema: { $ref: '#/components/schemas/PlaylistGroupCreate' }
      responses:
        '201':
          description: Playlist group created successfully
          content:
            application/json:
              schema: { $ref: '#/components/schemas/PlaylistGroup' }
        '401':
          $ref: '#/components/responses/Unauthorized'
        '400':
          description: Invalid playlist group data
          content:
            application/json:
              schema: { $ref: '#/components/schemas/ErrorResponse' }

  #------------------------------#
  # 4.3  PLAYLIST-ITEM ENDPOINTS #
  #------------------------------#
  /api/v1/playlist-items:
    get:
      tags: [Playlist-Items]
      summary: List playlist items with optional filtering and pagination
      parameters:
        - name: cursor
          in: query
          description: Pagination cursor from previous response
          schema:
            type: string
            pattern: '^[a-zA-Z0-9]+$'
            maxLength: 1024
          example: "1234567890"
        - name: limit
          in: query
          description: Number of items per page
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 100
          example: 100
        - name: playlist-group
          in: query
          description: Filter playlist items by playlist group ID (optional)
          schema:
            oneOf:
              - type: string
                format: uuid
              - type: string
                pattern: '^[a-zA-Z0-9-]+$'
                maxLength: 64
          example: "385f79b6-a45f-4c1c-8080-e93a192adccc"
      responses:
        '200':
          description: Playlist items retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlaylistItemsResponse'
        '400':
          description: Invalid query parameters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/v1/playlist-items/{itemId}:
    parameters:
      - name: itemId
        in: path
        required: true
        description: UUID for the playlist item
        schema:
          type: string
          format: uuid

    get:
      tags: [Playlist-Items]
      summary: Retrieve a playlist item by ID
      responses:
        '200':
          description: Playlist item retrieved successfully
          content:
            application/json:
              schema: { $ref: '#/components/schemas/PlaylistItem' }
        '400':
          description: Invalid playlist item ID
          content:
            application/json:
              schema: { $ref: '#/components/schemas/ErrorResponse' }
        '404':
          description: Playlist item not found
          content:
            application/json:
              schema: { $ref: '#/components/schemas/ErrorResponse' }
        '429':
          description: Rate limit exceeded
          content:
            application/json:
              schema: { $ref: '#/components/schemas/ErrorResponse' }

  /api/v1/playlist-groups/{groupId}:
    parameters:
      - name: groupId
        in: path
        required: true
        description: UUID or slug for the playlist group
        schema:
          oneOf:
            - type: string
              format: uuid
            - type: string
              pattern: '^[a-zA-Z0-9-]+$'
              maxLength: 64

    get:
      tags: [Playlist-Groups]
      summary: Retrieve a playlist group by ID
      responses:
        '200':
          description: Playlist group retrieved successfully
          content:
            application/json:
              schema: { $ref: '#/components/schemas/PlaylistGroup' }
        '404':
          description: Playlist group not found
          content:
            application/json:
              schema: { $ref: '#/components/schemas/ErrorResponse' }

    put:
      tags: [Playlist-Groups]
      summary: Update an existing playlist group
      security: [{ ApiKeyAuth: [] }]
      requestBody:
        required: true
        content:
          application/json:
            schema: { $ref: '#/components/schemas/PlaylistGroupUpdate' }
      responses:
        '200':
          description: Playlist group updated successfully
          content:
            application/json:
              schema: { $ref: '#/components/schemas/PlaylistGroup' }
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          description: Playlist group not found
          content:
            application/json:
              schema: { $ref: '#/components/schemas/ErrorResponse' }
        '400':
          description: Invalid playlist group data
          content:
            application/json:
              schema: { $ref: '#/components/schemas/ErrorResponse' }
